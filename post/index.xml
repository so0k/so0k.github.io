<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Guides and Notes by Vincent</title>
    <link>http://so0k.github.io/post/</link>
    <description>Recent content in Posts on Guides and Notes by Vincent</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>vincent.drl@gmail.com (Vincent De Smet)</managingEditor>
    <webMaster>vincent.drl@gmail.com (Vincent De Smet)</webMaster>
    <copyright>Copyright (c) 2015. All rights reserved.</copyright>
    <lastBuildDate>Thu, 10 Mar 2016 12:52:58 +0700</lastBuildDate>
    <atom:link href="http://so0k.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Kubecon EU 2016</title>
      <link>http://so0k.github.io/2016/03/10/kubecon-eu-2016/</link>
      <pubDate>Thu, 10 Mar 2016 12:52:58 +0700</pubDate>
      <author>vincent.drl@gmail.com (Vincent De Smet)</author>
      <guid>http://so0k.github.io/2016/03/10/kubecon-eu-2016/</guid>
      <description>

&lt;p&gt;Trying to summarize the &lt;a href=&#34;https://twitter.com/search?f=tweets&amp;amp;vertical=default&amp;amp;q=%23kubecon&amp;amp;src=typd&#34;&gt;twitter streams&lt;/a&gt; &amp;amp; &lt;a href=&#34;https://twitter.com/kubeconio&#34;&gt;@kubeconio&lt;/a&gt; so you don&amp;rsquo;t have to&amp;hellip;&lt;/p&gt;

&lt;p&gt;First, see the updated docs to &lt;a href=&#34;http://kubernetes.io/docs/whatisk8s/&#34;&gt;if you&amp;rsquo;re still wondering what Kubernetes is.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then, refer to the summary blog posts from people that were actually at KubeCon:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://corekube.com/2016/03/10/kubecon-london-2016-day-1/&#34;&gt;corekube.com Day 1 Summary&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://livewyer.com/blog/2016/03/10/kubecon-eu-day-1-summary&#34;&gt;livewyer.com/ Day 1 Summary&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&amp;amp; Summaries after the Conference finished:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://corekube.com/2016/03/11/kubecon-london-2016-day-2/&#34;&gt;corekube.com Day 2 Summary&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://techapostle.blogspot.com/2016/03/insights-from-kubecon-eu-2016.html&#34;&gt;Insights from Kubernetes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.benjvi.com/2016/03/13/tldr-kubecon&#34;&gt;TL/DR: KubeCon&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qaware.blogspot.in/2016/03/kubecon-2016-recap.html&#34;&gt;QAware Kubecon Recap&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;What I pieced together from the Twitter Stream:&lt;/p&gt;

&lt;h1 id=&#34;day-1:3b7fb9cf5e36b8b80caf14cf71cdf18e&#34;&gt;Day 1&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Kubernetes 1.2 available by end of March 2016&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/kubernetes/kubernetes/pull/19042&#34;&gt;ReplicaSets&lt;/a&gt; - ReplicaSets support a more generic selector compared to Replication Controllers - &lt;a href=&#34;http://kubernet.es/docs/user-guide/labels/#set-based-requirement&#34;&gt;explanation of difference&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/kubernetes/kubernetes/blob/master/docs/proposals/deployment.md&#34;&gt;Deployments&lt;/a&gt; manage ReplicaSets based on a template. Updating the template will make deployments act based on the difference of Desired vs Actual state, i.e. version updates will result in a rolling update (w/ zero downtime)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/eBay/Kubernetes/blob/master/docs/proposals/configmap.md&#34;&gt;Config Maps&lt;/a&gt; - late-binding, live-updated and atomic. Take the pod configuration out of the pod and let the kubelet provision it (either as env vars or config files mounted into the pod). Secrets were used to late bind config, Config Maps are designed as a better solution for this requirement. (see also: &lt;a href=&#34;https://github.com/kubernetes/kubernetes/issues/12732&#34;&gt;Kubernetes/Issues/12732&lt;/a&gt; - Keys/Certs generation for services)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://kubernetes.io/docs/admin/daemons/&#34;&gt;DaemonSet&lt;/a&gt; (i.e. cluster-wide node agents for logging / networking / storage / &amp;hellip; )&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://buff.ly/22d9cUn&#34;&gt;Kubernetes Dashboard Questionnaire&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Cloud Native Computing Foundation (CNCF): Linux Foundation Collaborative project aiming to advance a common set of open source tech to accelerate adoption of microservices, containers and cloud native applications. &lt;a href=&#34;http://www.linuxfoundation.org/news-media/announcements/2016/03/cloud-native-computing-foundation-accepts-kubernetes-first-hosted-0&#34;&gt;CNCF Accepts k8s as First Hosted Project&lt;/a&gt; - 1 goal is to establish a 1000-node cluster for the CNCF community to run and validate Cloud Native applications and infrastructure at scale.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;CoreOS: rkt-first approach - &lt;a href=&#34;https://coreos.com/kubernetes/docs/latest/kubelet-wrapper.html&#34;&gt;New kubelet-wrapper&lt;/a&gt; - &lt;a href=&#34;https://twitter.com/teamKatacoda/status/707902083094208512&#34;&gt;80% feature parity&lt;/a&gt; - estimated for end of 2016Q1 - &lt;a href=&#34;https://speakerdeck.com/joshix/coreos-rkt-and-kubernetes&#34;&gt;Slides?&lt;/a&gt; by &lt;a href=&#34;https://twitter.com/joshixisjosh9&#34;&gt;@joshixisjosh9&lt;/a&gt; - Appc Builder: &lt;a href=&#34;https://github.com/blablacar/dgr&#34;&gt;dgr&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Used by a lot of KubeCon demos: &lt;a href=&#34;https://github.com/weaveworks/scope&#34;&gt;Weave Scope&lt;/a&gt; provides a visual map of your Docker containers, so you can intuitively understand, monitor, and control your applications. Scope comes with built-in &lt;a href=&#34;https://github.com/weaveworks/scope#using-weave-scope-with-kubernetes&#34;&gt;Kubernetes support&lt;/a&gt;. &lt;a href=&#34;https://www.projectcalico.org/calico-and-weave-scope/&#34;&gt;Use Scope to visualize Calico&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://kubernetes.github.io&#34;&gt;New Docs website&lt;/a&gt; - Contributing, fixing issues, collecting bounties &lt;a href=&#34;https://github.com/kubernetes/kubernetes.github.io&#34;&gt;repo&lt;/a&gt; - $10k dollars allotted for bug fixes&amp;hellip;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://kubeconeurope2016.sched.org/event/67dA/kubernetes-and-the-potential-for-higher-level-interfaces&#34;&gt;Kubernetes and the Potential for Higher Level Interfaces&lt;/a&gt; - &lt;a href=&#34;https://speakerdeck.com/garethr/kubernetes-and-the-potential-for-higher-level-interfaces&#34;&gt;slides&lt;/a&gt; by &lt;a href=&#34;https://twitter.com/garethr&#34;&gt;@garethr&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://kubeconeurope2016.sched.org/event/6BYf/cloud-native-sdn-for-kubernetes&#34;&gt;Cloud-Native SDN for Kubernetes&lt;/a&gt; - &lt;a href=&#34;http://www.slideshare.net/RomanaProject/kubecon-london-2016-ronana-cloud-native-sdn&#34;&gt;slides&lt;/a&gt; - &lt;a href=&#34;https://github.com/romana/romana&#34;&gt;Romana&lt;/a&gt;: &lt;a href=&#34;https://github.com/appc/cni&#34;&gt;CNI&lt;/a&gt; plugin for k8s. With Romana you wonâ€™t have the overhead of a virtual network overlay so your Nodes will communicate more directly without tunnels or encapsulation - &lt;a href=&#34;https://youtu.be/qSeVvVn3K2U?t=24m30s&#34;&gt;Video from demo at Meetup&lt;/a&gt;. See also &lt;a href=&#34;http://romana.io/blog/kubernetes/&#34;&gt;Running k8s with Romana&lt;/a&gt; &amp;amp; &lt;a href=&#34;http://www.slideshare.net/RomanaProject/cloud-native-sdn&#34;&gt;Slides from Meetup&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;SDN - See also: &lt;a href=&#34;https://kubeconeurope2016.sched.org/event/6BUR/simple-scalable-secure-networking-for-kuberhellip&#34;&gt;Scalable networking with Calico&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;SDN - See also: Open Contrail on pannel discussion - ref: &lt;a href=&#34;http://www.opencontrail.org/kubernetes-and-openstack-multi-cloud-networking/&#34;&gt;k8s &amp;amp; OpenSTack&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://kubeconeurope2016.sched.org/event/6Bbu/the-state-of-state&#34;&gt;The State of State&lt;/a&gt; - no slides :( - &lt;a href=&#34;https://twitter.com/meinardi/status/707893808877457408&#34;&gt;tweeted summary slide?&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;persistent volumes providing cluster-wide non-ephemeral storage. A couple of different cluster storage providers are available for persistent volumes in k8s: More classic ones like NFS and SCSI; cloud native ones like GlusterFS and Ceph; cloud provider specific ones for GCE and AWS and storage abstraction layers like Flocker.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://kubeconeurope2016.sched.org/event/6Bc9/creating-an-advanced-load-balancing-solution-hellip&#34;&gt;Extending Services &amp;amp; Ingress with nginx&lt;/a&gt; &lt;a href=&#34;https://github.com/nginxinc/kubernetes-ingress&#34;&gt;repo&lt;/a&gt; - in &lt;a href=&#34;https://github.com/kubernetes/contrib/tree/master/ingress/controllers/nginx-third-party&#34;&gt;contrib&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://kubeconeurope2016.sched.org/event/6BYB/custom-volume-plugins&#34;&gt;Kubernetes Volume plugins&lt;/a&gt; - &lt;a href=&#34;https://speakerdeck.com/agonzalezro/custom-volume-plugins&#34;&gt;slides&lt;/a&gt; by &lt;a href=&#34;https://twitter.com/agonzalezro&#34;&gt;@agonzalezro&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://kubeconeurope2016.sched.org/event/6BhW/kubernetes-meets-finagle-for-resilient-microservices&#34;&gt;Kubernetes meets twitter/finagle for Resilient Microservices&lt;/a&gt; see: &lt;a href=&#34;https://github.com/buoyantio/linkerd&#34;&gt;linkerd&lt;/a&gt; - &lt;a href=&#34;https://speakerdeck.com/olix0r/kubernetes-meets-finagle-for-resilient-microservices&#34;&gt;slides&lt;/a&gt; by &lt;a href=&#34;https://twitter.com/olix0r&#34;&gt;@olix0r&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://kubeconeurope2016.sched.org/event/6BZX/if-you-can-drink-and-watch-star-wars-you-can-handle-kubernetes-in-production-because-thats-exactly-what-we-did&#34;&gt;If you can drink and watch Star Wars, you can handle Kubernetes in production (Because thatâ€™s exactly what we did)&lt;/a&gt; - &lt;a href=&#34;https://speakerdeck.com/errordeveloper/barriers-to-adoption-of-kubernetes-in-production&#34;&gt;slides&lt;/a&gt; by &lt;a href=&#34;https://twitter.com/errordeveloper&#34;&gt;@errordeveloper&lt;/a&gt; &amp;amp; &lt;a href=&#34;https://twitter.com/weaveworks&#34;&gt;@weaveworks&lt;/a&gt; - see also: &lt;a href=&#34;https://github.com/weaveworks/weave-kubernetes-anywhere&#34;&gt;k8s Anywhere&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://kubeconeurope2016.sched.org/event/6BV4/full-automatic-database-postgresql-ha-with-khellip&#34;&gt;Fully Automatic Database: PosgresSQL - HA wit k8s&lt;/a&gt; - &lt;a href=&#34;http://jberkus.github.io/full_automatic_db/index.html#1&#34;&gt;slides&lt;/a&gt; by &lt;a href=&#34;https://twitter.com/fuzzychef&#34;&gt;@fuzzychef&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://kubeconeurope2016.sched.org/event/6BUy/monitoring-microservices-docker-kuberneteshellip&#34;&gt;Monitoring Microservices at scale&lt;/a&gt; - &lt;a href=&#34;https://sysdig.com/blog/3-ways-that-kubernetes-changes-monitoring/&#34;&gt;3 ways that Kubernetes changes monitoring&lt;/a&gt; by &lt;a href=&#34;https://twitter.com/sysdig&#34;&gt;@sysdig&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://kubeconeurope2016.sched.org/event/67f2/kubernetes-in-production-in-the-new-york-timehellip&#34;&gt;Kubernetes in Production at the New York Times&lt;/a&gt; - &lt;a href=&#34;http://slides.com/ericlewis-1/kubernetes-at-the-new-york-times#/&#34;&gt;slides&lt;/a&gt; by &lt;a href=&#34;https://twitter.com/ericandrewlewis&#34;&gt;@ericandrewlewis&lt;/a&gt; (CoreOS on AWS)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://kubeconeurope2016.sched.org/event/6Bcb/leveraging-ephemeral-namespaces-in-a-cicd-pihellip&#34;&gt;Leveraging ephemeral namespaces in a CI/CD pipeline&lt;/a&gt; - by &lt;a href=&#34;https://twitter.com/canthefason&#34;&gt;@canthefason&lt;/a&gt; - see: &lt;a href=&#34;https://twitter.com/meinardi/status/707976055466946560&#34;&gt;CI/CD evolution with #kubernetes namespaces&lt;/a&gt;
&amp;amp;&amp;amp; &lt;a href=&#34;https://twitter.com/danielbryantuk/status/707980331354345473&#34;&gt;Key takeways&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;--maximum-dead-containers=100
--maximum-dead-containers-per-container=2
--minimum-container-ttl-duration=1m0s
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://labs.unacast.com/2015/12/07/chatops-small-fails-and-big-wins/&#34;&gt;ChatOps: Small fails and big wins&lt;/a&gt; by &lt;a href=&#34;https://twitter.com/heim&#34;&gt;@heim&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Best practice for CI/CD on k8s seems to be: separate different applications and stages by using k8s namespaces and use ChatOps tools like Hubot (&lt;a href=&#34;https://hubot.github.com&#34;&gt;https://hubot.github.com&lt;/a&gt;) to provide fast feedback to the devs &amp;amp; ops.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Hypernetes - &lt;a href=&#34;https://hyper.sh/&#34;&gt;https://hyper.sh/&lt;/a&gt; (Similar to ClearOS from intel?)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Container Wars continued? - &lt;a href=&#34;http://kurma.io/&#34;&gt;http://kurma.io/&lt;/a&gt; by &lt;a href=&#34;https://twitter.com/Apcera&#34;&gt;@Apcera&lt;/a&gt; - &lt;a href=&#34;http://www.slideshare.net/Apcera/kurma-a-containerized-container-platform-kubecon-2016&#34;&gt;slides&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/kubernetes/kubernetes/milestones/v1.2&#34;&gt;1.2 milestones&lt;/a&gt; &amp;amp; &lt;a href=&#34;https://www.gcppodcast.com/post/episode-16-kubernetes-1-dot-2-with-kelsey-hightower/&#34;&gt;Google Cloud Platform Podcast with Kelsey Hightower&lt;/a&gt; (starts at 06:20)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Apprenda Sales pitch? &lt;a href=&#34;https://kubeconeurope2016.sched.org/event/68yE/hybrid-apps-orchestrating-cloud-native-and-thellip&#34;&gt;Hybrid Apps: Orchestrating Cloud Native and Traditional Application Architectures&lt;/a&gt; by &lt;a href=&#34;https://twitter.com/sschuller&#34;&gt;@sschuller&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://kubeconeurope2016.sched.org/event/6BTj/a-lightweight-deployment-system-for-appops&#34;&gt;A lightweight deployment system for &amp;laquo;appops&amp;raquo;&lt;/a&gt; - &lt;a href=&#34;https://www.youtube.com/watch?v=TJpucj4v4iE&#34;&gt;kubernauts/kploy&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;RedHat OpenShift: &lt;a href=&#34;http://rhelblog.redhat.com/2016/02/23/the-red-hat-ecosystem-for-microservice-and-container-development/&#34;&gt;The Red Hat Ecosystem for Microservice and Container Development&lt;/a&gt; - &lt;a href=&#34;https://blog.openshift.com/tag/kubernetes/&#34;&gt;tag: Kubernetes&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;day-2:3b7fb9cf5e36b8b80caf14cf71cdf18e&#34;&gt;Day 2&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://kubeconeurope2016.sched.org/event/68lU/day-2-keynote-pushing-kubernetes-forward&#34;&gt;Pushing Kubernetes Forward&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/polvi/monokube&#34;&gt;polvi/monokube&lt;/a&gt; by &lt;a href=&#34;https://twitter.com/polvi&#34;&gt;@polvi&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;etcd v3 (gRPC &amp;amp; HTTP/2) &amp;amp; API improvements for k8s use-case (see &lt;a href=&#34;https://github.com/coreos/etcd/tree/master/etcdctlv3#watch-options-key-or-prefix&#34;&gt;watch&lt;/a&gt; Key/Prefix &amp;amp; Rev options)&lt;/li&gt;
&lt;li&gt;Multiple image formats in v1.3 API&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://kubeconeurope2016.sched.org/event/6Bb3/using-traffic-control-to-test-apps-in-containers&#34;&gt;Using Traffic control to Test Apps in Containers&lt;/a&gt; by &lt;a href=&#34;https://twitter.com/kinvolkio&#34;&gt;@kinvolkio&lt;/a&gt; / &lt;a href=&#34;https://twitter.com/albcr&#34;&gt;@albcr&lt;/a&gt; - &lt;a href=&#34;https://github.com/kinvolk/demo/tree/master/traffic-control-rkt&#34;&gt;GitHub Repo&lt;/a&gt; - See &lt;a href=&#34;https://kinvolk.io/blog/&#34;&gt;kinvolk.io Blog post&lt;/a&gt; with video demonstration. Weave/Scope &lt;a href=&#34;https://twitter.com/weaveworks/status/708245029278629888&#34;&gt;Viz1&lt;/a&gt; &lt;a href=&#34;https://twitter.com/lxpollitt/status/708245298817146880&#34;&gt;Viz2&lt;/a&gt; and &lt;a href=&#34;https://github.com/kinvolk/tcd&#34;&gt;tcd&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://kubeconeurope2016.sched.org/event/6BVH/templatized-application-configuration-on-openhellip&#34;&gt;Templatized Application configuration&lt;/a&gt; - Resources&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.openshift.org/latest/dev_guide/templates.html&#34;&gt;Openshift Templates&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/kubernetes/kubernetes/blob/master/docs/proposals/templates.md&#34;&gt;Kubernetes Templates&lt;/a&gt; (Proposal)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/kubernetes/kubernetes/issue/12732&#34;&gt;Kubernetes Secret Generation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://helm.sh&#34;&gt;Helm&lt;/a&gt; (to merge with Deployment Manager?)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/kubernetes/deployment-manager&#34;&gt;Deployment-Manager&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://kubeconeurope2016.sched.org/event/67dI/itnw-if-this-now-what-orchestrating-an-enthellip&#34;&gt;If This Now What: Orchestrating an Enterprise&lt;/a&gt; - &lt;a href=&#34;http://www.devoperandi.com/wp-content/uploads/2016/03/KubeConPreso.pdf&#34;&gt;slides&lt;/a&gt; see also: &lt;a href=&#34;http://www.devoperandi.com/kubernetes-stackstorm-and-third-party-resources-part-2/&#34;&gt;Blog post&lt;/a&gt; - &lt;a href=&#34;https://github.com/mward29/st2contrib/tree/master/packs/kubernetes&#34;&gt;Kubernetes Pack&lt;/a&gt; by &lt;a href=&#34;https://twitter.com/DevoperandI&#34;&gt;@DevoperandI&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://kubeconeurope2016.sched.org/event/6BY8/interactive-monitoring-for-kubernetes&#34;&gt;Interactive Monitoring for Kubernetes&lt;/a&gt; - &lt;a href=&#34;http://www.slideshare.net/weaveworks/interactive-monitoring-for-kubernetes&#34;&gt;slides&lt;/a&gt; by &lt;a href=&#34;https://twitter.com/tom_wilkie&#34;&gt;@tom_wilkie&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://kubeconeurope2016.sched.org/event/67dM/your-app-is-alive&#34;&gt;Your App is alive&lt;/a&gt; - &lt;a href=&#34;https://speakerdeck.com/michellen/kubecon-healthchecks-pdf&#34;&gt;Slides from KubeCon&lt;/a&gt; &amp;amp; &lt;a href=&#34;https://speakerdeck.com/michellen/your-app-is-alive&#34;&gt;Slides from Colorado meetup&lt;/a&gt; (prior to kubecon) - &lt;a href=&#34;https://github.com/michelleN/puffy&#34;&gt;simple Go server&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Transforming the Government - notice: &lt;a href=&#34;https://github.com/UKHomeOffice/vault-sidekick&#34;&gt;UKHomeOffice/vault-sidekick&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://kubeconeurope2016.sched.org/event/6BcS/kubernetes-storage-101&#34;&gt;Kubernetes Storage 101&lt;/a&gt; -  &lt;a href=&#34;storage.redhat.com/2015/06/22/red-hat-drives-deeper-integration-of-persistent-storage-for-containerized-environments/&#34;&gt;RedHat Storage&lt;/a&gt; &lt;a href=&#34;https://corekube.com/2016/03/14/kubecon-pi-day-volumes/&#34;&gt;corekube Volumes Deep dive&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://kubeconeurope2016.sched.org/event/6BZa/a-practical-guide-to-container-scheduling&#34;&gt;A Practical Guide to Container Scheduling&lt;/a&gt; by &lt;a href=&#34;https://twitter.com/tekgrrl&#34;&gt;@tekgrrl&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://kubeconeurope2016.sched.org/event/67d4/making-sense-of-the-growing-kubernetes-communhellip&#34;&gt;Making Sense of the Kubernetes community&lt;/a&gt; by &lt;a href=&#34;https://twitter.com/fintanr&#34;&gt;@fintanr&lt;/a&gt; - &lt;a href=&#34;http://redmonk.com/fryan/2016/03/14/the-further-evolution-of-kubernetes/&#34;&gt;Blog Post&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://kubeconeurope2016.sched.org/event/6BUp/trading-in-the-kube&#34;&gt;Trading in the Kube&lt;/a&gt; Note: &lt;a href=&#34;http://adaptiveconsulting.github.io/ReactiveTraderJS&#34;&gt;AdaptiveConsulting/ReactiveTraderCloud&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Last updated: Tuesday, March 15&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How to quickly group FlatFile records and get a grouped Field maximum</title>
      <link>http://so0k.github.io/2016/02/24/how-to-quickly-group-flatfile-records-and-get-a-grouped-field-maximum/</link>
      <pubDate>Wed, 24 Feb 2016 17:10:02 +0700</pubDate>
      <author>vincent.drl@gmail.com (Vincent De Smet)</author>
      <guid>http://so0k.github.io/2016/02/24/how-to-quickly-group-flatfile-records-and-get-a-grouped-field-maximum/</guid>
      <description>&lt;p&gt;If the data was in a RDBMS you&amp;rsquo;d simply &lt;code&gt;GROUP BY Field1&lt;/code&gt; and &lt;code&gt;SELECT MAX(Field2)&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;However, all I got are: FlatFiles, little time and PowerShell, so Let&amp;rsquo;s GO!&lt;/p&gt;

&lt;p&gt;First, I have to filter down records in the file based on the first 3 characters of each line, only &lt;code&gt;ANV&lt;/code&gt; records were of interest to me, let me load these records in memory real fast:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ANV=gc SSRF-FAH.BAK | ? { $_.substring(0,3) -eq &amp;quot;ANV&amp;quot; }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Great, let&amp;rsquo;s have a look at what the first few records we just loaded look like:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ANV | Select -First 10
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Which gives me:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ANVA182007                                                                   20130425...
ANVA182600                                                                   20120829...
ANVA182607                                                                   20130425...
ANVA188001                                                                   20120829...
ANVA188010                                                                   20120829...
ANVA188011                                                                   20120829...
ANVA188012                                                                   20120829...
ANVA188014                                                                   20120829...
ANVA188016                                                                   20120829...
ANVA190000                                                                   20120829...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I only care about the first 20 characters and only the last 2 record fields listed below:&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Start&lt;/th&gt;
&lt;th&gt;Length&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;RecordType&lt;/td&gt;
&lt;td&gt;00&lt;/td&gt;
&lt;td&gt;03&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Category&lt;/td&gt;
&lt;td&gt;03&lt;/td&gt;
&lt;td&gt;02&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Code&lt;/td&gt;
&lt;td&gt;05&lt;/td&gt;
&lt;td&gt;15&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Let&amp;rsquo;s create some custom properties to display this data&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ANV | Select `
@{Name=&amp;quot;Category&amp;quot;;Expression={$_.Substring(3,2)}}, `
@{Name=&amp;quot;Code&amp;quot;;Expression={$_.Substring(5,15)}} `
| Select -First 10
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
&lt;p&gt;Above we used HashTables (a data structure which stores Key-Value pairs). In PowerShell you write HashTables with the &lt;code&gt;@{&amp;lt;key&amp;gt;=&amp;lt;value&amp;gt;}&lt;/code&gt; syntax. The &lt;code&gt;Select-Object&lt;/code&gt; cmdlet accepts a HashTable with &lt;code&gt;Name&lt;/code&gt; and &lt;code&gt;Expression&lt;/code&gt; Fields to create custom (a.k.a calculated) properties.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I actually only want the length of the codes, so getting the Length after trimming the field gives me the following snippet:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; $ANV | Select `
 @{Name=&amp;quot;Category&amp;quot;;Expression={$_.Substring(3,2)}}, `
 @{Name=&amp;quot;CodeLength&amp;quot;;Expression={$_.Substring(5,15).trim().Length}} `
 | Select -First 10
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now let&amp;rsquo;s group by the &lt;code&gt;Category&lt;/code&gt; Field:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ANV | Select `
@{Name=&amp;quot;Category&amp;quot;;Expression={$_.Substring(3,2)}}, `
@{Name=&amp;quot;CodeLength&amp;quot;;Expression={$_.Substring(5,15).trim().Length}} | `
Group Category | Select -First 10
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This gives us the following&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Count Name                      Group
----- ----                      -----
   16 A1                        {@{Category=A1; CodeLength=5}, @{Category=A1; Code...}}
   13 A3                        {@{Category=A3; CodeLength=4}, @{Category=A3; Code...}}
  530 A4                        {@{Category=A4; CodeLength=1}, @{Category=A4; Code...}}
  351 A6                        {@{Category=A6; CodeLength=4}, @{Category=A6; Code...}}
    1 A7                        {@{Category=A7; CodeLength=5}}
    3 C4                        {@{Category=C4; CodeLength=1}, @{Category=C4; Code...}}
  216 I1                        {@{Category=I1; CodeLength=3}, @{Category=I1; Code...}}
    3 I3                        {@{Category=I3; CodeLength=1}, @{Category=I3; Code...}}
    8 I4                        {@{Category=I4; CodeLength=2}, @{Category=I4; Code...}}
   40 M0                        {@{Category=M0; CodeLength=4}, @{Category=M0; Code...}}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Great, only thing left to do is get the maximum &lt;code&gt;CodeLength&lt;/code&gt; per &lt;code&gt;Category&lt;/code&gt;&amp;hellip; most Google results tell you to sort and select the first &lt;code&gt;ForEach&lt;/code&gt; group. &lt;code&gt;%&lt;/code&gt; is a shortcut for &lt;code&gt;ForEach&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ANV | Select `
@{Name=&amp;quot;Category&amp;quot;;Expression={$_.Substring(3,2)}}, `
@{Name=&amp;quot;CodeLength&amp;quot;;Expression={$_.Substring(5,15).trim().Length}} | `
Group Category | %{ $_.Group | Sort CodeLength -Descending | Select -First 1 }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Exactly what I needed:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Category CodeLength
-------- ----------
A1                5
A3                4
A4                9
A6                5
A7                5
C4                1
...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now back to the boring parts :(&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Docker v1.10</title>
      <link>http://so0k.github.io/2016/01/21/docker-v1.10/</link>
      <pubDate>Thu, 21 Jan 2016 12:52:58 +0700</pubDate>
      <author>vincent.drl@gmail.com (Vincent De Smet)</author>
      <guid>http://so0k.github.io/2016/01/21/docker-v1.10/</guid>
      <description>

&lt;p&gt;&lt;strong&gt;Docker 1.10 is coming&lt;/strong&gt; and as with any release in the ever fast moving world of Docker, it is good to find out more about the use cases for the newly introduced commands, below is a list of the interesting changes that stood out for me so far:&lt;/p&gt;

&lt;h3 id=&#34;container-mutability-and-the-new-docker-update-command:61aa534034babfc14972e5e817552dee&#34;&gt;Container Mutability and the new &lt;code&gt;docker update&lt;/code&gt; command&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/docker/docker/pull/15078&#34;&gt;Relevant pull request&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Usage: docker update [OPTIONS] CONTAINER [CONTAINER...]

Updates container resource limits

  --blkio-weight=0           Block IO (relative weight), between 10 and 1000
  --cpu-shares=0             CPU shares (relative weight)
  --cpu-period=0             Limit the CPU CFS (Completely Fair Scheduler) period
  --cpu-quota=0              Limit the CPU CFS (Completely Fair Scheduler) quota
  --cpuset-cpus=&amp;quot;&amp;quot;           CPUs in which to allow execution (0-3, 0,1)
  --cpuset-mems=&amp;quot;&amp;quot;           Memory nodes (MEMs) in which to allow execution (0-3, 0,1)
  -m, --memory=&amp;quot;&amp;quot;            Memory limit
  --memory-reservation=&amp;quot;&amp;quot;    Memory soft limit
  --memory-swap=&amp;quot;&amp;quot;           Total memory (memory + swap), &#39;-1&#39; to disable swap
  --kernel-memory=&amp;quot;&amp;quot;         Kernel memory limit: container must be stopped
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The docker update command dynamically updates container resources. Use this command to prevent containers from consuming too many resources from their Docker host. With a single command, you can place limits on a single container or on many. To specify more than one container, provide space-separated list of container names or IDs.&lt;/p&gt;

&lt;p&gt;With the exception of the &lt;code&gt;--kernel-memory&lt;/code&gt; value, you can specify these options on a running or a stopped container. You can only update &lt;code&gt;--kernel-memory&lt;/code&gt; on a stopped container. When you run docker update on stopped container, the next time you restart it, the container uses those values.&lt;/p&gt;

&lt;p&gt;Prior to 1.10, once the Docker Daemon created a container for the Image you chose to run, it did not give you an easy way to change the configuration you specified with the &lt;code&gt;docker run&lt;/code&gt; command.&lt;/p&gt;

&lt;p&gt;From a technical perspective, Docker exposes a layer above a set of technologies (cgroups, namespaces, iptables, filesystems, &amp;hellip;) to provide its users an easy way of managing these resources for their applications. One could always dig into these layers to make adjustments behind the daemons&amp;rsquo; back.&lt;/p&gt;

&lt;p&gt;For example:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://stackoverflow.com/questions/19897743/exposing-a-port-on-a-live-docker-container&#34;&gt;Exposing ports on a live container&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;This Stack Overflow question gives us this very usefull snippet&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#get the container IP
CONTAINER_IP=$(docker inspect -f &#39;{{ .NetworkSettings.IPAddress }}&#39; container_name)
#forward packets from port 8001 on your host to port 8000 on the container
iptables -t nat -A DOCKER -p tcp --dport 8001 -j DNAT --to-destination ${CONTAINER_IP}:8000
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;http://superuser.com/questions/803772/remove-exposed-port-from-docker/808124&#34;&gt;See Also&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://goldmann.pl/blog/2014/09/11/resource-management-in-docker/&#34;&gt;Managing Docker resources with Cgroups&lt;/a&gt; (September 2014)&lt;/p&gt;

&lt;p&gt;Either by interacting with &lt;code&gt;cgroups&lt;/code&gt; directly or if running Docker with Systemd, using &lt;code&gt;systemctl&lt;/code&gt; to set properties on the systemd scope of the container, also refer to the &lt;a href=&#34;https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/Resource_Management_Guide/&#34;&gt;Redhat Resource Management Guide&lt;/a&gt; &amp;amp; &lt;a href=&#34;http://www.freedesktop.org/software/systemd/man/systemd.resource-control.html&#34;&gt;systemd resource control&lt;/a&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo systemctl set-property docker-4be96b853089bc6044b29cb873cac460b429cfcbdd0e877c0868eb2a901dbf80.scope CPUShares=512
#show all the properties:
systemctl show docker-4be96b853089bc6044b29cb873cac460b429cfcbdd0e877c0868eb2a901dbf80.scope
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://jpetazzo.github.io/2015/01/13/docker-mount-dynamic-volumes/&#34;&gt;Attaching Volumes to a running container&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;hellip;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;But going behind the back of the Docker Daemon does not provide any logs or audit trails and may cause unexpected side effects, moreover - giving users the ability apply these changes through the Docker API only makes sense given it is possible to achieve underneath&amp;hellip; but up to what point?&lt;/p&gt;

&lt;p&gt;This brings us to a very important question: &lt;strong&gt;How much of a container should be mutable?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;With Docker 1.9, networks could be &lt;a href=&#34;https://docs.docker.com/engine/reference/commandline/network_connect/&#34;&gt;connected &amp;amp; disconnected&lt;/a&gt; from a Container and containers could be &lt;a href=&#34;https://docs.docker.com/engine/reference/commandline/rename/&#34;&gt;renamed&lt;/a&gt; while all other aspects are immutable from the Docker daemon&amp;rsquo;s perspective.&lt;/p&gt;

&lt;p&gt;With the addition of the &lt;a href=&#34;https://github.com/docker/docker/blob/v1.10.0-rc1/docs/reference/commandline/update.md&#34;&gt;&lt;code&gt;docker update&lt;/code&gt;&lt;/a&gt; command in 1.10, CPU/Memory resources can be changed dynamically (except the &lt;code&gt;--kernel-memory&lt;/code&gt; setting which requires a container restart) and are persisted in the container definition to ensure they still apply after restarts.&lt;/p&gt;

&lt;p&gt;Adding support for exposing ports, changing container restart policies and &lt;a href=&#34;https://github.com/docker/docker/pull/18958&#34;&gt;labels&lt;/a&gt; are being worked on , but do not seem to be planned for the 1.10 release, but what about &lt;code&gt;Environment variables&lt;/code&gt;?&lt;/p&gt;

&lt;h3 id=&#34;container-network-model-service-discovery:61aa534034babfc14972e5e817552dee&#34;&gt;Container Network Model - Service Discovery&lt;/h3&gt;

&lt;p&gt;With the 1.9 release, Docker moved its networking libraries from the experimental branch to the production ready branch. Networking brought a big change in the way containers find each other, deprecating Docker links as well as adding cross-host support with overlay (vxlan) networks (replacing the ambassador container pattern).&lt;/p&gt;

&lt;p&gt;Docker links worked by modifying the &lt;code&gt;/etc/hosts&lt;/code&gt; files within the containers, bypassing DNS lookups. The new networking model built further on this approach to provide cluster wide service discovery. Unfortunately, making changes to a shared resource (&lt;code&gt;/etc/hosts&lt;/code&gt;) in a non-atomic way and scaling &lt;a href=&#34;https://github.com/docker/docker/issues/17190&#34;&gt;will never go hand in hand&lt;/a&gt;. The service discovery model was in desperate need for a change.&lt;/p&gt;

&lt;p&gt;As highlighted by Ahmet Alp Balkan in his &lt;a href=&#34;https://youtu.be/WXESsPqC8to&#34;&gt;excellent DockerCon EU 2015 presentation&lt;/a&gt;, most Service Discovery solutions gravitate towards the tested and proven DNS protocol. Some of the drawbacks highlighted such as IP caching and no respect for TLS are solved by Cluster Management Systems such as Kubernetes by fully decoupling the service endpoint from the implementation through labels and fixed IP service resources.&lt;/p&gt;

&lt;p&gt;The fix by the Docker networking team for 1.10 would be to &lt;a href=&#34;https://github.com/docker/docker/issues/17195&#34;&gt;bundle a DNS server with the Docker Daemon&lt;/a&gt; and expose this service within the namespace of every container. This would certainly be a much better solution than the current one, but the fact that &lt;strong&gt;neither the previous &lt;code&gt;/etc/hosts&lt;/code&gt; nor the upcoming DNS server are &lt;em&gt;optional&lt;/em&gt;&lt;/strong&gt; is still &lt;a href=&#34;http://blog.kubernetes.io/2016/01/why-Kubernetes-doesnt-use-libnetwork.html&#34;&gt;not making some people happy&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How to Kill a Hanging Hyper-V VM</title>
      <link>http://so0k.github.io/2016/01/13/how-to-kill-a-hanging-hyper-v-vm/</link>
      <pubDate>Wed, 13 Jan 2016 12:56:56 +0700</pubDate>
      <author>vincent.drl@gmail.com (Vincent De Smet)</author>
      <guid>http://so0k.github.io/2016/01/13/how-to-kill-a-hanging-hyper-v-vm/</guid>
      <description>

&lt;p&gt;After boasting how fast I got a NodeJS container to do play with some npm packages, as seen in my previous post, I crashed the Hyper-V VM I was using&amp;hellip;&lt;/p&gt;

&lt;p&gt;I accidentally disconnected the external hard disk from which the CoreOS VM was running (due to an ageing USB cable) and I could no longer shut it down. Asking Hyper-V to turn of the power didn&amp;rsquo;t work also. The &lt;a href=&#34;https://technet.microsoft.com/en-us/library/hh848468.aspx&#34;&gt;&lt;code&gt;Stop-VM&lt;/code&gt;&lt;/a&gt; cmdlet was quite useless.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Stop-VM -Force
#hanging...#
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This was not the first time I faced this issue, but I couldn&amp;rsquo;t find my notes on how I fixed it last time (I remember it was possible to get the ProcessId from a Hyper-V VM and just kill the process, should be simple&amp;hellip;), time to properly jot it down this time for future reference&amp;hellip;&lt;/p&gt;

&lt;h2 id=&#34;solution&#34;&gt;Solution&lt;/h2&gt;

&lt;p&gt;I started by looking at the Properties exposed by the &lt;code&gt;Microsoft.HyperV.PowerShell.VirtualMachine&lt;/code&gt; object returned from the &lt;code&gt;Get-VM&lt;/code&gt; cmdlet. Use the &lt;code&gt;Get-Member&lt;/code&gt; cmdlet for this (or the &lt;code&gt;GM&lt;/code&gt; alias) and filter for things such as &amp;laquo;Process&amp;raquo; and &amp;laquo;Id&amp;raquo; (still falling back to old command tools such as &lt;code&gt;findstr&lt;/code&gt; out of habit&amp;hellip;)&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-PowerShell&#34;&gt;Get-VM | GM | findstr /I &amp;quot;id&amp;quot;
Get-VM | GM | findstr /I &amp;quot;proc&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Didn&amp;rsquo;t return what I was looking for&amp;hellip;&lt;/p&gt;

&lt;p&gt;Having a look at the Name and Id property gave me this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Get-VM | ft Id, Name
Id                                   Name
--                                   ----
3b5532af-93ae-4aa5-86e3-474a9e3638a0 coreos2
5c46b6d3-d4c5-4cfb-8587-84bbdeb3158a Win2k12-Sql2k12-Sun442
d591db38-0cce-474c-99be-d076b312c553 Win2k3-SQL2008R2-Sun433
ea0c01ad-8c66-4f84-99f4-df80e40ef3da Win2k8-Ora11.2-Sun44
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I did have to resort to Google and it turns out Hyper-V uses this Id when starting the VM Worker Process (&lt;code&gt;vmwp&lt;/code&gt;), a TaskList showing the CommandLine will tell you that clearly:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Get-WmiObject win32_process -Filter &amp;quot;name like &#39;%vmwp%&#39;&amp;quot; | select CreationDate,ProcessId,CommandLine | ft -AutoSize
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;That&amp;rsquo;s all I needed to know to kill the VM&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Stop-Process 13432
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It&amp;rsquo;s always easier if you let the computer do the matching for you, &lt;a href=&#34;http://vniklas.djungeln.se/2013/01/30/find-correlation-between-vmwp-process-and-vm-in-hyper-v-2012/&#34;&gt;This blog post shows you how&lt;/a&gt;, break tis down as follows:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Get the VM Id parsed out of the CommandLine by splitting on the space and returning the 2nd element in the array (0-based indexing):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Get-WmiObject win32_process -Filter &amp;quot;name like &#39;%vmwp%&#39;&amp;quot; | select {$_.CommandLine.split(&amp;quot; &amp;quot;)[1] }
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Use a Dictionary object to assign a proper name to the property:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Get-WmiObject win32_process -Filter &amp;quot;name like &#39;%vmwp%&#39;&amp;quot; | select ProcessId, @{Label=&amp;quot;VM.Id&amp;quot;;Expression={$_.CommandLine.split(&amp;quot; &amp;quot;)[1]}}
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Pass this GUID to the &lt;code&gt;Get-VM&lt;/code&gt; cmdlet and return the &lt;code&gt;Name&lt;/code&gt; property from the &lt;code&gt;Microsoft.HyperV.PowerShell.VirtualMachine&lt;/code&gt; Object associated with each running &lt;code&gt;vmwp&lt;/code&gt; Process:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Get-WmiObject Win32_Process -Filter &amp;quot;Name like &#39;%vmwp%&#39;&amp;quot; | select ProcessId, `
@{Label=&amp;quot;VM.Name&amp;quot;;Expression={(Get-VM -Id $_.Commandline.split(&amp;quot; &amp;quot;)[1]).Name}}
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Hyper-V restarted the VM as soon as its worker process died, but this time it was responding properly&amp;hellip;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How to quickly get an up to date looking resume</title>
      <link>http://so0k.github.io/2016/01/13/how-to-quickly-get-an-up-to-date-looking-resume/</link>
      <pubDate>Wed, 13 Jan 2016 09:35:36 +0700</pubDate>
      <author>vincent.drl@gmail.com (Vincent De Smet)</author>
      <guid>http://so0k.github.io/2016/01/13/how-to-quickly-get-an-up-to-date-looking-resume/</guid>
      <description>

&lt;p&gt;It never hurts to keep your resume up to date and after 9 years of negligence, mine looked terribly out dated. (won&amp;rsquo;t share a picture)&lt;/p&gt;

&lt;p&gt;After spending some time looking around on &lt;a href=&#34;http://resumes.reddit.com&#34;&gt;/r/resumes&lt;/a&gt;, I came across &lt;a href=&#34;http://jsonresume.org&#34;&gt;jsonresume.org&lt;/a&gt; and played around with their online resume editor.&lt;/p&gt;

&lt;p&gt;Convinced this was a very useful tool I wanted to take it for a spin locally, but as I do not have Node on my freshly installed Windows 10 machine, it seems it would take a while to get it up and running locally&amp;hellip;&lt;/p&gt;

&lt;p&gt;Well, this isn&amp;rsquo;t really an issue if you have a local Docker daemon (I still had a CoreOS VM with a Nodejs image ready). But if you&amp;rsquo;re on Windows, you had to do some leg work in advance, I will go through the Windows steps as well. If you do not have an appropriate Windows environment set up already, it will obviously be a LOT faster to simply install NodeJS, but I had everything pre-configured so this really just took me 5 minutes (no lies, I promise!).&lt;/p&gt;

&lt;h2 id=&#34;ensure-your-docker-daemon-is-running:91365d17c2334facda03bb4e3d4f873d&#34;&gt;Ensure your Docker Daemon is running&lt;/h2&gt;

&lt;p&gt;Bring up the VM with PowerShell (Run As Administrator required &amp;amp; assuming you had created a CoreOS VM previously):&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-Powershell&#34;&gt;$vm = Start-Vm -PassThru coreos2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Monitor the boot process, or don&amp;rsquo;t (this isn&amp;rsquo;t necessary, just handy to know when CoreOS has finished booting):&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-Powershell&#34;&gt;vmconnect $env:COMPUTERNAME $vm.Name -G $vm.Id
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Open a shell to the VM, or just &lt;code&gt;export DOCKER_HOST=tcp://192.158.233.130:2375&lt;/code&gt; if you&amp;rsquo;ve activated the &lt;code&gt;Systemctl enable docker.socket&lt;/code&gt; (I didn&amp;rsquo;t):&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ssh core@192.168.233.130
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;Note&lt;/em&gt;: You can get the IP of the VM using the &lt;code&gt;lvms&lt;/code&gt; alias I described &lt;a href=&#34;http://so0k.github.io/2016/01/07/about-this-blog-and-my-setup&#34;&gt;here&lt;/a&gt; or just read it from the Virtual Machine Connection &lt;code&gt;vmconnect&lt;/code&gt; window if you opened it earlier.&lt;/p&gt;

&lt;h2 id=&#34;optionally-mount-windows-host-files-to-your-coreos-vm:91365d17c2334facda03bb4e3d4f873d&#34;&gt;Optionally, Mount Windows host files to your CoreOS VM&lt;/h2&gt;

&lt;p&gt;I had already configured my CoreOS to mount shared folders from my Windows host, here are the steps to achieve this, if you can&amp;rsquo;t do this yet:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Ensure the windows path is shared, mine is &amp;laquo;D:\prj\&amp;raquo;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-Powershell&#34;&gt;Get-WmiObject -Class Win32_Share -Filter &amp;quot;path=&#39;D:\\prj&#39;&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If your path is not shared, you can share any path using PowerShell with the following command&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-Powershell&#34;&gt;(Get-WmiObject Win32_Share -List).Create
  (
    &amp;quot;D:\prj\&amp;quot;, &amp;quot;prj&amp;quot;, 0
  )
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;http://windowsitpro.com/powershell/managing-file-shares-windows-powershell&#34;&gt;Source&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Ensure the mount.cifs binary is available on CoreOS, I made a &lt;a href=&#34;https://hub.docker.com/r/so0k/mount.cifs_copy/&#34;&gt;popular Docker Image&lt;/a&gt; available on the Docker Hub to achieve this. The following command downloads the image and copies &lt;code&gt;mount.cifs&lt;/code&gt; to &lt;code&gt;/opt/bin/&lt;/code&gt; on the CoreOS Host:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run --rm -v /opt/bin:/target so0k/mount.cifs-copy:6.4 /target
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Mount the samba share in CoreOS&lt;/p&gt;

&lt;p&gt;Use the following bash script &lt;code&gt;vim mounthost.sh&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/bin/bash


SMB_HOST=${SMB_HOST:-192.168.233.1}
SMB_SHARE=${SMB_SHARE:-share}
SMB_USER=${SMB_USER:-user}
WIN_MOUNT=${WIN_MOUNT:-/mnt/win}
read -s -p &amp;quot;Password: &amp;quot; SMB_PASS
printf &amp;quot;\n&amp;quot;
printf &amp;quot;mounting drive to $WIN_MOUNT\n&amp;quot;
sudo /opt/bin/mount.cifs //$SMB_HOST/$SMB_SHARE $WIN_MOUNT -o nolock,username=$SMB_USER,pass=$SMB_PASS,iocharset=utf8
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Make the script executable:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;chmod +x mounthost.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;set the expected env variables:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;export SMB_HOST=192.168.233.1
export SMB_SHARE=prj
export SMB_USER=my.username
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Run the script, you will be prompted for your password:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;./mounthost
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;start-a-nodejs-container-and-install-jsonresume:91365d17c2334facda03bb4e3d4f873d&#34;&gt;Start a NodeJS container and install jsonresume&lt;/h2&gt;

&lt;p&gt;Create a new container using the official NodeJS Docker Image (no tag = latest tag), this will be pulled if you do not have an image already. (I can only confirm this works with &lt;code&gt;node:0.12&lt;/code&gt; which is the version I already had on my daemon)&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -it --name resume -p 4000:4000 -v /mnt/win:/mnt/win --entrypoint /bin/bash node
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This exposes port &lt;code&gt;4000&lt;/code&gt; on the container to port &lt;code&gt;4000&lt;/code&gt; on the Docker host, mounts the &lt;code&gt;/mnt/win/&lt;/code&gt; directory into the container and changes the entrypoint to &lt;code&gt;/bin/bash&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Install &lt;code&gt;resume-cli&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;npm install -g resume-cli
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;confirm all is working using&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;resume --help
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/jsonresume/resume-cli&#34;&gt;Read full instructions on the GitHub Repo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you used the online editor to create a json file, copy the file to your shared folder on your windows machine and serve the file&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd /mnt/win/
mkdir jsonresume
cd /mnt/win/jsonresume
 resume export cv.html --theme flat
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;At the time of writing, the resume-cli server did not work, so no live editing locally&amp;hellip; but here&amp;rsquo;s a static version of &lt;a href=&#34;http://so0k.github.io/cv.html&#34;&gt;my updated cv&lt;/a&gt; using the Flat theme..&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Kubernetes Workshop for Docker Saigon</title>
      <link>http://so0k.github.io/2016/01/07/kubernetes-workshop-for-docker-saigon/</link>
      <pubDate>Thu, 07 Jan 2016 12:27:33 +0700</pubDate>
      <author>vincent.drl@gmail.com (Vincent De Smet)</author>
      <guid>http://so0k.github.io/2016/01/07/kubernetes-workshop-for-docker-saigon/</guid>
      <description>

&lt;p&gt;This is &lt;a href=&#34;http://so0k.github.io/do/preview/how-to-provision-a-kubernetes-cluster-using-coreos.html&#34;&gt;the first draft of a guide&lt;/a&gt; I wrote to set up Kubernetes with CoreOS on DigitalOcean. This guide is battle-tested through a workshop for the &lt;a href=&#34;http://docker-saigon.github.io&#34;&gt;Docker-Saigon&lt;/a&gt; Meetup Group. During the workshop, Users may use this draft to follow along with the instructions until the guide has been officially published on Digital Ocean.&lt;/p&gt;

&lt;p&gt;Attendees need to have:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A laptop (Linux/OSX/Windows should all be fine)&lt;/li&gt;
&lt;li&gt;A console ready to go with access to &lt;code&gt;git&lt;/code&gt; &amp;amp; &lt;code&gt;openssh&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;A &lt;a href=&#34;https://www.digitalocean.com/?refcode=d6a3f4aecbdf&#34;&gt;Digital Ocean&lt;/a&gt; account ready (if you do not have an account, feel free to sign up with &lt;a href=&#34;https://www.digitalocean.com/?refcode=d6a3f4aecbdf&#34;&gt;my referral link&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Decent Docker knowledge&lt;/li&gt;
&lt;li&gt;Some CoreOS / Systemd knowledge&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I estimate it takes about 3 hours to work through the guide.&lt;/p&gt;

&lt;h3 id=&#34;digital-ocean-article-preview-do-preview-how-to-provision-a-kubernetes-cluster-using-coreos-html&#34;&gt;&lt;a href=&#34;http://so0k.github.io/do/preview/how-to-provision-a-kubernetes-cluster-using-coreos.html&#34;&gt;Digital Ocean Article Preview&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Using the &lt;a href=&#34;https://www.digitalocean.com/community/markdown&#34;&gt;Markdown Preview Generator from Digital Ocean&lt;/a&gt; I generated and copied the article preview &lt;a href=&#34;http://so0k.github.io/do/preview/how-to-provision-a-kubernetes-cluster-using-coreos-v2.html&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://so0k.github.io/do/preview/how-to-provision-a-kubernetes-cluster-using-coreos.html&#34;&gt;&lt;img src=&#34;http://so0k.github.io/assets/images/sammy-jetpack.png&#34; alt=&#34;Sammy Jetpack!&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Logo &amp;copy; Digital Ocean and designed by &lt;a href=&#34;https://twitter.com/simonoxleee&#34;&gt;Simon Oxley&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;EDIT - 2016-01-08&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Added link to Article Preview&lt;/li&gt;
&lt;li&gt;Removed full article from blog post as HighlightJS was causing rendering issues.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;EDIT - 2016-01-13&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;replaced link to Article Preview to point to v2&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>About This Blog and My Setup</title>
      <link>http://so0k.github.io/2016/01/07/about-this-blog-and-my-setup/</link>
      <pubDate>Thu, 07 Jan 2016 12:26:19 +0700</pubDate>
      <author>vincent.drl@gmail.com (Vincent De Smet)</author>
      <guid>http://so0k.github.io/2016/01/07/about-this-blog-and-my-setup/</guid>
      <description>&lt;p&gt;This blog is meant for those notes I feel confident enough about to release them into the wild. Feel free to review and use what you like.&lt;/p&gt;

&lt;p&gt;The static website was generated using &lt;a href=&#34;https://gohugo.io&#34;&gt;Hugo&lt;/a&gt;, which is blazingly fast and easy to deploy (even on Windows). I am in fact still using Windows, which seems to be rare for Developers these days&amp;hellip; However, at the time of writing this post - the Oculus Rift CV1 is only supported on Windows, so&amp;hellip; there&amp;rsquo;s that.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m using the &lt;a href=&#34;https://github.com/mmrath/hugo-bootstrap&#34;&gt;hugo-bootstrap&lt;/a&gt; theme and I felt the author&amp;rsquo;s personal blog source is very useful as an &lt;a href=&#34;https://github.com/mmrath/blog&#34;&gt;exampleSite&lt;/a&gt; as well.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m currently using Windows 10 with &lt;a href=&#34;https://github.com/git-for-windows/git/wiki/FAQ&#34;&gt;git-for-windows&lt;/a&gt; and &lt;a href=&#34;https://github.com/Maximus5/ConEmu/blob/master/README.md&#34;&gt;ConEmu&lt;/a&gt;. git-for-windows provides me an &lt;code&gt;ssh&lt;/code&gt; client, &lt;a href=&#34;https://github.com/git-for-windows/git/wiki/Auto-launching-ssh-agent-when-git-starts&#34;&gt;&lt;code&gt;agent&lt;/code&gt;&lt;/a&gt; and key generator - so I do no longer need putty/puttygen and pagent. &lt;code&gt;vim&lt;/code&gt; is also included, and I&amp;rsquo;m trying to get used to it, but I still prefer to use Sublime Text.&lt;/p&gt;

&lt;p&gt;The Windows edition I have comes with Hyper-V, so I&amp;rsquo;m using that instead of Virtual Box / VMWare / &amp;hellip;&lt;/p&gt;

&lt;p&gt;Hyper-V does not have a proper NAT / DHCP solution, so I&amp;rsquo;m cheating a little as I still need the excellent VMWare &lt;code&gt;vmnat.exe&lt;/code&gt; and &lt;code&gt;vmdhcp.exe&lt;/code&gt; services. I install VMWare Player just for these :( - but once Hyper-V is enabled, VMWare will refuse to work. Setting up Virtual Switches and using ICS is impractical. Switching between the Ethernet and Wifi adapters requires you to go to &lt;code&gt;control netconnections&lt;/code&gt; and share the connected adapter&amp;hellip; just&amp;hellip; no&lt;/p&gt;

&lt;p&gt;I feel there must be a way to just get the dlls and run regsrv32, put the config files where they are expected, create some registry keys and you should be good to go. I also had to download VM Workstation installation archive and extract &lt;code&gt;vmnetcfg.exe&lt;/code&gt; from the installation package to have a decent network configuration utility, but once that&amp;rsquo;s done - working with Hyper-V became a breeze.&lt;/p&gt;

&lt;p&gt;I generally list my Virtual Machines using PowerShell as follows:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;Get-VM
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;and start my Virtual Machines like this:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$vm = Start-VM ubuntu  -Passthru
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I may monitor the connection process through the &lt;code&gt;vmconnect.exe&lt;/code&gt; program (Which has to be on the Path)&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;vmconnect $env:COMPUTERNAME $vm.Name -G $vm.Id
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Once the Linux VM booted, I switch over to &lt;code&gt;git-bash&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;I have a problem with finding the IP addresses leased to my VMs, but discovered that the VMWare DHCP service stores the leases on disk under &lt;code&gt;$ProgramData/VMWare/vmnetdhcp.leases&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;I made a little function &amp;amp; alias in my &lt;code&gt;~/.bashrc&lt;/code&gt; as follows:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;function fnc_getVMleases {
	cat $ProgramData/VMWare/vmnetdhcp.leases | egrep -o &#39;lease.*{|client-hostname.*;&#39; | awk &#39;{print $2}&#39; | xargs -n 2 | cut -d &#39;;&#39; -f 1 | awk &#39;!a[$0]++&#39;
}
alias lvms=fnc_getVMleases
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This uses &lt;code&gt;egrep&lt;/code&gt; to find lines that either have the &lt;code&gt;lease&lt;/code&gt; or &lt;code&gt;client-hostname&lt;/code&gt; and print the 2nd column (separated by space), feed that into &lt;code&gt;xargs&lt;/code&gt; to combine every 2 lines into 2 columns and get rid of the semicolumn at the end, finally use &lt;code&gt;awk&lt;/code&gt; to remove duplicate rows (as there are some when leases are renewed)&lt;/p&gt;

&lt;p&gt;I think it could be optimized using &lt;code&gt;sed&lt;/code&gt; to define a label of rows to print.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>