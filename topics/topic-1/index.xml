<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Topic 1 on Guides and Notes by Vincent</title>
    <link>http://so0k.github.io/topics/topic-1/</link>
    <description>Recent content in Topic 1 on Guides and Notes by Vincent</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>vincent.drl@gmail.com (Vincent De Smet)</managingEditor>
    <webMaster>vincent.drl@gmail.com (Vincent De Smet)</webMaster>
    <copyright>Copyright (c) 2015. All rights reserved.</copyright>
    <lastBuildDate>Thu, 07 Jan 2016 12:27:33 +0700</lastBuildDate>
    <atom:link href="http://so0k.github.io/topics/topic-1/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Kubernetes Workshop for Docker Saigon</title>
      <link>http://so0k.github.io/2016/01/07/kubernetes-workshop-for-docker-saigon/</link>
      <pubDate>Thu, 07 Jan 2016 12:27:33 +0700</pubDate>
      <author>vincent.drl@gmail.com (Vincent De Smet)</author>
      <guid>http://so0k.github.io/2016/01/07/kubernetes-workshop-for-docker-saigon/</guid>
      <description>

&lt;p&gt;This is &lt;a href=&#34;http://so0k.github.io/do/preview/how-to-provision-a-kubernetes-cluster-using-coreos.html&#34;&gt;the first draft of a guide&lt;/a&gt; I wrote to set up Kubernetes with CoreOS on DigitalOcean. This guide is battle-tested through a workshop for the &lt;a href=&#34;http://docker-saigon.github.io&#34;&gt;Docker-Saigon&lt;/a&gt; Meetup Group. During the workshop, Users may use this draft to follow along with the instructions until the guide has been officially published on Digital Ocean.&lt;/p&gt;

&lt;p&gt;Attendees need to have:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A laptop (Linux/OSX/Windows should all be fine)&lt;/li&gt;
&lt;li&gt;A console ready to go with access to &lt;code&gt;git&lt;/code&gt; &amp;amp; &lt;code&gt;openssh&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;A &lt;a href=&#34;https://www.digitalocean.com/?refcode=d6a3f4aecbdf&#34;&gt;Digital Ocean&lt;/a&gt; account ready (if you do not have an account, feel free to sign up with &lt;a href=&#34;https://www.digitalocean.com/?refcode=d6a3f4aecbdf&#34;&gt;my referral link&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Decent Docker knowledge&lt;/li&gt;
&lt;li&gt;Some CoreOS / Systemd knowledge&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I estimate it takes about 3 hours to work through the guide.&lt;/p&gt;

&lt;h3 id=&#34;digital-ocean-article-preview-do-preview-how-to-provision-a-kubernetes-cluster-using-coreos-html&#34;&gt;&lt;a href=&#34;http://so0k.github.io/do/preview/how-to-provision-a-kubernetes-cluster-using-coreos.html&#34;&gt;Digital Ocean Article Preview&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Using the &lt;a href=&#34;https://www.digitalocean.com/community/markdown&#34;&gt;Markdown Preview Generator from Digital Ocean&lt;/a&gt; I generated and copied the article preview &lt;a href=&#34;http://so0k.github.io/do/preview/how-to-provision-a-kubernetes-cluster-using-coreos.html&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://so0k.github.io/do/preview/how-to-provision-a-kubernetes-cluster-using-coreos.html&#34;&gt;&lt;img src=&#34;http://so0k.github.io/assets/images/sammy-jetpack.png&#34; alt=&#34;Sammy Jetpack!&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Logo &amp;copy; Digital Ocean and designed by &lt;a href=&#34;https://twitter.com/simonoxleee&#34;&gt;Simon Oxley&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;EDIT - 2016-01-08&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Added link to Article Preview&lt;/li&gt;
&lt;li&gt;Removed full article from blog post as HighlightJS was causing rendering issues.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>About This Blog and My Setup</title>
      <link>http://so0k.github.io/2016/01/07/about-this-blog-and-my-setup/</link>
      <pubDate>Thu, 07 Jan 2016 12:26:19 +0700</pubDate>
      <author>vincent.drl@gmail.com (Vincent De Smet)</author>
      <guid>http://so0k.github.io/2016/01/07/about-this-blog-and-my-setup/</guid>
      <description>&lt;p&gt;This blog is meant for those notes I feel confident enough about to release them into the wild. Feel free to review and use what you like.&lt;/p&gt;

&lt;p&gt;The static website was generated using &lt;a href=&#34;https://gohugo.io&#34;&gt;Hugo&lt;/a&gt;, which is blazingly fast and easy to deploy (even on Windows). I am in fact still using Windows, which seems to be rare for Developers these days&amp;hellip; However, at the time of writing this post - the Oculus Rift CV1 is only supported on Windows, so&amp;hellip; there&amp;rsquo;s that.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m using the &lt;a href=&#34;https://github.com/mmrath/hugo-bootstrap&#34;&gt;hugo-bootstrap&lt;/a&gt; theme and I felt the author&amp;rsquo;s personal blog source is very useful as an &lt;a href=&#34;https://github.com/mmrath/blog&#34;&gt;exampleSite&lt;/a&gt; as well.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m currently using Windows 10 with &lt;a href=&#34;https://github.com/git-for-windows/git/wiki/FAQ&#34;&gt;git-for-windows&lt;/a&gt; and &lt;a href=&#34;https://github.com/Maximus5/ConEmu/blob/master/README.md&#34;&gt;ConEmu&lt;/a&gt;. git-for-windows provides me an &lt;code&gt;ssh&lt;/code&gt; client, &lt;a href=&#34;https://github.com/git-for-windows/git/wiki/Auto-launching-ssh-agent-when-git-starts&#34;&gt;&lt;code&gt;agent&lt;/code&gt;&lt;/a&gt; and key generator - so I do no longer need putty/puttygen and pagent. &lt;code&gt;vim&lt;/code&gt; is also included, and I&amp;rsquo;m trying to get used to it, but I still prefer to use Sublime Text.&lt;/p&gt;

&lt;p&gt;The Windows edition I have comes with Hyper-V, so I&amp;rsquo;m using that instead of Virtual Box / VMWare / &amp;hellip;&lt;/p&gt;

&lt;p&gt;Hyper-V does not have a proper NAT / DHCP solution, so I&amp;rsquo;m cheating a little as I still need the excellent VMWare &lt;code&gt;vmnat.exe&lt;/code&gt; and &lt;code&gt;vmdhcp.exe&lt;/code&gt; services. I install VMWare Player just for these :( - but once Hyper-V is enabled, VMWare will refuse to work. Setting up Virtual Switches and using ICS is impractical. Switching between the Ethernet and Wifi adapters requires you to go to &lt;code&gt;control netconnections&lt;/code&gt; and share the connected adapter&amp;hellip; just&amp;hellip; no&lt;/p&gt;

&lt;p&gt;I feel there must be a way to just get the dlls and run regsrv32, put the config files where they are expected, create some registry keys and you should be good to go. I also had to download VM Workstation installation archive and extract &lt;code&gt;vmnetcfg.exe&lt;/code&gt; from the installation package to have a decent network configuration utility, but once that&amp;rsquo;s done - working with Hyper-V became a breeze.&lt;/p&gt;

&lt;p&gt;I generally list my Virtual Machines using PowerShell as follows:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;Get-VM
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;and start my Virtual Machines like this:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$vm = Start-VM ubuntu  -Passthru
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I may monitor the connection process through the &lt;code&gt;vmconnect.exe&lt;/code&gt; program (Which has to be on the Path)&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;vmconnect $env:COMPUTERNAME $vm.Name -G $vm.Id
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Once the Linux VM booted, I switch over to &lt;code&gt;git-bash&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;I have a problem with finding the IP addresses leased to my VMs, but discovered that the VMWare DHCP service stores the leases on disk under &lt;code&gt;$ProgramData/VMWare/vmnetdhcp.leases&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;I made a little function &amp;amp; alias in my &lt;code&gt;~/.bashrc&lt;/code&gt; as follows:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;function fnc_getVMleases {
	cat $ProgramData/VMWare/vmnetdhcp.leases | egrep -o &#39;lease.*{|client-hostname.*;&#39; | awk &#39;{print $2}&#39; | xargs -n 2 | cut -d &#39;;&#39; -f 1 | awk &#39;!a[$0]++&#39;
}
alias lvms=fnc_getVMleases
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This uses &lt;code&gt;egrep&lt;/code&gt; to find lines that either have the &lt;code&gt;lease&lt;/code&gt; or &lt;code&gt;client-hostname&lt;/code&gt; and print the 2nd column (separated by space), feed that into &lt;code&gt;xargs&lt;/code&gt; to combine every 2 lines into 2 columns and get rid of the semicolumn at the end, finally use &lt;code&gt;awk&lt;/code&gt; to remove duplicate rows (as there are some when leases are renewed)&lt;/p&gt;

&lt;p&gt;I think it could be optimized using &lt;code&gt;sed&lt;/code&gt; to define a label of rows to print.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>